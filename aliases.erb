export PATH="$PATH:$(find ./automation/tools -name '.*' -prune -o -type d | tr "\n" ":")"

<% settings.net_tools_paths.each do |tool_path| %>
PATH=$PATH:<%= tool_path.as_win_path %>
<% end %>

ROOT=$(pwd)

function ch_root(){
  cd $ROOT
}

#Aliases for thor tasks

alias boweri='root;cd source;npm run-script postinstall'
#
#Compile aliases
alias cs='thor compile:selection'
alias ccw='root;thor processes:kill iisexpress node;thor automation:clean;cw'
alias root=ch_root
alias automation='root;cd automation'

#Load order aliases
alias dlo='root;cd source;node dump_load_order'

#Edit a particular compile unit
alias edit='thor edit:edit $*'

#Paket Aliases
alias pki='thor paket:install'
alias pkglv='thor paket:get_latest_version'
alias pkup='thor paket:update'

#Start the continuous tester
alias ct='thor continuous_testing:run_it compile_units/all.compile'

#Start growl
alias grs='thor growl:start'

#Re-expand the dev aliases
alias exp='root;expands;source aliases'

#Run all of the tests for the main compile unit, exclude slow and seed tags
alias sr='thor specs:run_them compile_units/all.compile --flags=exclude:slow,seed'

#Run all of the tests for the main compile unit
alias sra='thor specs:run_them compile_units/all.compile'

#Kill all runner processes
alias tpkrp='thor processes:kill_runner_processes'

#project aliases
alias fb='thor git:fetch_branch $*'
alias fl='thor git:fetch_latest $*'
alias gljp='thor git::get_latest_from_jp'
alias smc='thor work:save_my_changes'
alias sne='thor work:start_new_exercise;thor compile:project compile_units/all.compile'
alias str='thor git:student_remotes'
alias trash='thor git:trash'

#Initialize the project
alias rf='bundle install && thor bootstrap:setup && thor startup:configure'

#Migration aliases
alias clean='thor automation:clean'
alias init='thor automation:clean'

alias sia='start_it_all'

function start_it_all(){
  thor processes:kill_runner_processes
  thor growl:start
  thor automation:clean
  thor automation:init
  thor run:feature
  continuous_dev
}

function _powershell(){
  start powershell -NoExit -WindowStyle normal -Command $*
}

<% settings.extra_aliases.each do |the_alias| %>
. <%= the_alias %>
<% end %>
